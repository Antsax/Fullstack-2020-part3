{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","showAll","handleFilter","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","peopleToShow","removePerson","className","map","person","key","number","name","onClick","id","baseUrl","axios","get","then","response","data","personObject","post","put","delete","Notification","message","App","useState","persons","setPersons","setNewName","setNewNumber","setShowAll","notification","setNotification","useEffect","personService","returnedPersons","filter","toLowerCase","includes","event","target","preventDefault","window","confirm","find","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8ad9869.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ showAll, handleFilter }) => {\n  return (\n    <div>\n      filter shown with <input value={showAll} onChange={handleFilter} />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number:\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = ({ peopleToShow, removePerson }) => {\n  return (\n    <div className=\"person\">\n      {peopleToShow.map((person) => (\n        <p key={(person.number, person.name)}>\n          {person.name} {person.number}{' '}\n          <button\n            type=\"delete\"\n            onClick={() => removePerson({ id: person.id, name: person.name })}\n          >\n            delete\n          </button>\n        </p>\n      ))}\n    </div>\n  )\n}\n\nexport default Persons\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = (personObject) => {\n  const request = axios.post(baseUrl, personObject)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, personObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, personObject)\n  return request.then((response) => response.data)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) return null\n  return <div className=\"error\">{message}</div>\n}\n\nexport default Notification\n","import React, { useEffect, useState } from 'react'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport personService from '../services/persons'\nimport Notification from './Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowAll] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then((returnedPersons) => {\n      setPersons(returnedPersons)\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (persons.map((person) => person.name).includes(newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, do you wish to replace the old number with a new one?`\n        )\n      ) {\n        const id = persons.find((person) => person.name === newName).id\n        personService\n          .update(id, personObject)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== id ? person : returnedPerson\n              )\n            )\n\n            setNotification(`${newName} updated successfully!`)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n\n          .catch((error) => {\n            setNotification(\n              `${newName} has already been removed from the server`\n            )\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson))\n          setNotification(`${newName} added successfully!`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch((error) => {\n          setNotification(\n            `Person validation failed: ${error.response.data.error}`\n          )\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const removePerson = ({ id, name }) => {\n    if (window.confirm(`Do you want to delete ${name}?`)) {\n      personService\n        .remove(id)\n        .then(setPersons(persons.filter((person) => person.id !== id)))\n        .catch((error) => {\n          setNotification(`${name} has already been removed from the server`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n\n      setNotification(`${name} removed successfully!`)\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setShowAll(event.target.value)\n  }\n\n  const peopleToShow = persons.filter((person) =>\n    person.name.toLowerCase().includes(showAll.toLowerCase())\n  )\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notification} />\n      <Filter showAll={showAll} handleFilter={handleFilter} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons peopleToShow={peopleToShow} removePerson={removePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}